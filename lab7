#include "stdafx.h"
#include <stdlib.h>
#include "conio.h"

typedef struct Node {
	int value;
	struct Node *next;
} Node;
static void reverse(struct Node** head_ref)
{
    struct Node* prev   = NULL;
    struct Node* current = *head_ref;
    struct Node* next;
    while (current != NULL)
    {
        next  = current->next;  
        current->next = prev;   
        prev = current;
        current = next;
    }
    *head_ref = prev;
}
Node *addNodeAtBegining(Node *head, int v) {
  Node *newNode =(Node*)malloc(sizeof(Node));
  newNode->value = v;
  newNode->next = head;
  return newNode;
}
void printList(Node*head) {
	Node *node = head;
	while (node != NULL) {
		printf("%d", node->value);
		node=node->next;
		printf("\n \n");
	}
}
void findMaxNode(Node*head) {
	int v;
	Node *node = head;
	Node *maxNode = head;
	int max=0;
	while (node != NULL) {
		if (node->value > max) {
			max =node->value;
			maxNode = node;
		}
		node = node->next;
	}
	printf("Max value:");
	printf("%d", maxNode->value);
        printf("\n \n" );
	Node *newNode = (Node*)malloc(sizeof(Node));
	printf("Print value of New Node:");
	scanf_s("%d",&v);
	newNode->value = v;
	newNode->next = maxNode->next;
	maxNode->next =newNode;
	printf("\n \n");
}

int main() {
	Node *head = NULL;
	int k;
	int g;
	printf("Print number of Nodes:");
	scanf_s("%d", &k);
	while (k > 0) {
		printf("Print value of Node:");
		scanf_s("%d", &g);
		head = addNodeAtBegining(head, g);
		k--;
	}
	printf("\nValue in list: \n");
	reverse(&head);
	printList(head);
    findMaxNode(head);
    printList(head);
	_gettch();
}
